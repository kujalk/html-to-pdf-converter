name: 'HTML to PDF App'

on:
  workflow_dispatch:
    inputs:
      action:
          type: choice
          description: Terraform apply or create
          options: 
          - apply
          - destroy
          required: true
          
jobs:
  build-and-deploy:
    name: 'Build and Deployment of AWS Resources'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
      
    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      run: cd Terraform;terraform init

    - name: Terraform Plan
      run: cd Terraform;terraform plan -input=false

    # Applying changes to Infrastructure (for each environment)
    - name: Terraform Apply/Destroy
      run: cd Terraform;terraform ${{ github.event.inputs.action }}  -auto-approve -input=false

    - name: Build React App and push to S3
      if: github.event.inputs.action == 'apply'
      run: |
        cd Terraform

        # Get output from Terraform
        websiteurl=$(terraform output website-endpoint)
        websitebucket=$(terraform output website-bucket)
        apigw=$(terraform output api-gw)
        bucket=$(terraform output pdf-storage-bucket)

        # Export the output as an environment variable
        export website=$website
        export apigw=$apigw
        export bucket=$bucket

        # Replace placeholders in the template file
        cd ../Front-end/pdf-converter
        cat src/Config.json | envsubst > src/Config.json
        cat src/Config.json 

        # Build react app and push app 
        npm install react-scripts --save
        npx update-browserslist-db@latest
        npm cache clean --force
        rm node_modules/.cache
        npm run build

        aws s3 cp build/ s3://$websitebucket/ --recursive

        echo "App url is https://$websiteurl"

